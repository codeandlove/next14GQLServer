extend type Query {
	category(id: ID, slug: String): Category!

	categories(take: Int!, skip: Int!): CategoryList!

	collection(id: ID, slug: String): Collection!

	collections(take: Int!, skip: Int!): CollectionList!

	order(id: ID!, status: OrderStatus): Order!

	orders(userId: ID!): [Order!]!

	product(id: ID, slug: String): Product!

	products(order: SortDirection! = ASC, orderBy: ProductsSortBy! = DEFAULT, ids: [ID!] search: String, take: Int!, skip: Int!): ProductList!

	reviews(productId: ID!): [Review!]!
}

extend type Mutation {
	createOrder: Order!

	createOrderItem( orderId: ID!, productId: ID!, quantity: Int!): Order!
	updateOrderItem( orderId: ID!, productId: ID!, quantity: Int!): Order!
	removeOrderItem( orderId: ID!, productId: ID!): Order!

	placeOrder(orderId: ID!, email: String!, userId: ID, sessionId: String, totalAmount: Int!): Order!

	createReview( productId: ID!, headline: String!, content: String!, rating: Int!, name: String!, email: String!): Review!

}

type Category {
	id: ID!
	name: String!
	slug: String!
	description: String!
	products(take: Int!, skip: Int!): [Product!]!
}

type CategoryList {
	data: [Category!]!
	meta: Meta!
}

type Collection {
	id: ID!
	name: String!
	slug: String!
	description: String!
	products(take: Int!, skip: Int!): [Product!]!
}

type CollectionList {
	data: [Collection!]!
	meta: Meta!
}

type Product {
	id: ID!
	name: String!
	slug: String!
	description: String!
	longDescription: String!
	price: Int!
	image: String!
	status: String!
	rating: Int!
	categories: [Category!]!
	collections: [Collection!]!
}

type ProductList {
	data: [Product!]!
	meta: Meta!
}

type Order {
	id: ID!
	totalAmount: Int!
	status: OrderStatus!
	orderItems: [OrderItem!]!

	email: String
	userId: ID
	sessionId: String

	createdAt: DateTime!
	updatedAt: DateTime!
}

type OrderItem {
	id: ID!
	quantity: Int!
	product: Product!
	productId: ID!
	orderId: ID!
}

type Review {
	id: ID!
	headline: String!
	content: String!
	rating: Int!
	name: String!
	email: String!
	createdAt: DateTime!
}

scalar DateTime

type Meta {
	count: Int!
	total: Int!
}

enum OrderStatus {
	PAID
	FULFILLED
	CREATED
	CANCELLED
}

enum SortDirection {
	ASC
	DESC
}

enum OrderSortBy {
	DEFAULT
	STATUS
	TOTAL
}

enum ProductsSortBy {
	DEFAULT
	PRICE
	NAME
}
